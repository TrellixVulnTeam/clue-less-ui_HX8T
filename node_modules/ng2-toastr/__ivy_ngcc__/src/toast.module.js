"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var common_1 = require("@angular/common");
var toast_container_component_1 = require("./toast-container.component");
var toast_manager_1 = require("./toast-manager");
var toast_options_1 = require("./toast-options");
var ɵngcc0 = require('@angular/core');
var ɵngcc1 = require('./toast-container.component');
var ɵngcc2 = require('@angular/common');
var ToastModule = (function () {
    function ToastModule() {
    }
    ToastModule.forRoot = function () {
        return {
            ngModule: ToastModule,
            providers: [toast_manager_1.ToastsManager, toast_options_1.ToastOptions],
        };
    };
ToastModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ToastModule });
ToastModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ToastModule_Factory(t) { return new (t || ToastModule)(); }, imports: [[common_1.CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ToastModule, { declarations: [ɵngcc1.ToastContainer], imports: [ɵngcc2.CommonModule], exports: [ɵngcc1.ToastContainer] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ToastModule, [{
        type: core_1.NgModule,
        args: [{
                imports: [common_1.CommonModule],
                declarations: [toast_container_component_1.ToastContainer],
                exports: [toast_container_component_1.ToastContainer],
                entryComponents: [toast_container_component_1.ToastContainer]
            }]
    }], function () { return []; }, null); })();
    return ToastModule;
}());
/** @nocollapse */
ToastModule.ctorParameters = function () { return []; };
exports.ToastModule = ToastModule;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9hc3QubW9kdWxlLmpzIiwic291cmNlcyI6WyJ0b2FzdC5tb2R1bGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7OztnREFBTTtBQUNOO0FBQ0EsS0FRRTtBQUNGO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgY29yZV8xID0gcmVxdWlyZShcIkBhbmd1bGFyL2NvcmVcIik7XG52YXIgY29tbW9uXzEgPSByZXF1aXJlKFwiQGFuZ3VsYXIvY29tbW9uXCIpO1xudmFyIHRvYXN0X2NvbnRhaW5lcl9jb21wb25lbnRfMSA9IHJlcXVpcmUoXCIuL3RvYXN0LWNvbnRhaW5lci5jb21wb25lbnRcIik7XG52YXIgdG9hc3RfbWFuYWdlcl8xID0gcmVxdWlyZShcIi4vdG9hc3QtbWFuYWdlclwiKTtcbnZhciB0b2FzdF9vcHRpb25zXzEgPSByZXF1aXJlKFwiLi90b2FzdC1vcHRpb25zXCIpO1xudmFyIFRvYXN0TW9kdWxlID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBUb2FzdE1vZHVsZSgpIHtcbiAgICB9XG4gICAgVG9hc3RNb2R1bGUuZm9yUm9vdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG5nTW9kdWxlOiBUb2FzdE1vZHVsZSxcbiAgICAgICAgICAgIHByb3ZpZGVyczogW3RvYXN0X21hbmFnZXJfMS5Ub2FzdHNNYW5hZ2VyLCB0b2FzdF9vcHRpb25zXzEuVG9hc3RPcHRpb25zXSxcbiAgICAgICAgfTtcbiAgICB9O1xuICAgIHJldHVybiBUb2FzdE1vZHVsZTtcbn0oKSk7XG5Ub2FzdE1vZHVsZS5kZWNvcmF0b3JzID0gW1xuICAgIHsgdHlwZTogY29yZV8xLk5nTW9kdWxlLCBhcmdzOiBbe1xuICAgICAgICAgICAgICAgIGltcG9ydHM6IFtjb21tb25fMS5Db21tb25Nb2R1bGVdLFxuICAgICAgICAgICAgICAgIGRlY2xhcmF0aW9uczogW3RvYXN0X2NvbnRhaW5lcl9jb21wb25lbnRfMS5Ub2FzdENvbnRhaW5lcl0sXG4gICAgICAgICAgICAgICAgZXhwb3J0czogW3RvYXN0X2NvbnRhaW5lcl9jb21wb25lbnRfMS5Ub2FzdENvbnRhaW5lcl0sXG4gICAgICAgICAgICAgICAgZW50cnlDb21wb25lbnRzOiBbdG9hc3RfY29udGFpbmVyX2NvbXBvbmVudF8xLlRvYXN0Q29udGFpbmVyXVxuICAgICAgICAgICAgfSxdIH0sXG5dO1xuLyoqIEBub2NvbGxhcHNlICovXG5Ub2FzdE1vZHVsZS5jdG9yUGFyYW1ldGVycyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFtdOyB9O1xuZXhwb3J0cy5Ub2FzdE1vZHVsZSA9IFRvYXN0TW9kdWxlO1xuIl19